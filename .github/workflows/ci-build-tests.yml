
on:
  push:
    branches:
      - main
      - v1.0.x
      - v1.1.x
    tags:
      - 'v[0-9]+\.[0-9]+\.[0-9]+'
    
  pull_request:
    branches:
      - main
      - v1.0.x
      - v1.1.x

name: Continuous Integration and Build Tests

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.64
          args: --timeout 5m
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Get Build Date
        id: builddate
        run: echo "::set-output name=builddate::$(date -u +%Y-%m-%dT%H:%M:%SZ)"
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: build image
        run: |
          docker buildx build \
            --label "org.opencontainers.image.revision=${{ github.sha }}" \
            --label "org.opencontainers.image.source=https://github.com/${{ github.repository }}" \
            --label "org.opencontainers.image.created=${{ steps.builddate.outputs.builddate }}" \
            --platform linux/arm64/v8,linux/amd64 \
            -f ./Dockerfile  .
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go: [1.24]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install python dependencies
        run: python -m pip install --upgrade pip setuptools wheel
      - name: installing codespell
        run: pip install codespell
      - name: running codespell
        run: codespell --skip="vendor,*.git,*.png,*.pdf,*.tiff,*.plist,*.pem,rangesim*.go,*.gz,go.mod,go.sum" --ignore-words="./testdata/ignore_words.txt"
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - uses: actions/checkout@v4
      - name: Get dependencies
        run: |
          go mod download
      - run: go mod vendor
      - name: Run tests
        run: make test
      - name: Run tests (with race detection enabled)
        run: |
          echo "::group::Race Detection Tests"
          make data-race-test
          echo "::endgroup::"
          make data-race-test-inspect
      - run: sed -i -e '/^.*_gen\.go:.*$/d' .coverprofile
      - run: go build -o /dev/null ./cmd/trickster
      - name: Send coverage
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: .coverprofile
          flag-name: Go-${{ matrix.go }}
          parallel: true
  finish:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: shogo82148/actions-goveralls@v1
        with:
          parallel-finished: true

on:
  push:
    branches:
    - main
  workflow_dispatch:
  workflow_call:
    inputs:
        tag:
          description: 'Tag to use for the image'
          required: false
          type: string
          default: ''
name: Publish Latest Trickster Image

jobs:
  publish-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    strategy:
      matrix:
        arch:
        - linux/amd64
        - linux/arm64/v8
    steps:
      - name: Get Build Date
        id: builddate
        run: |
            echo "builddate=$(date -u +%Y-%m-%dT%H:%M:%SZ)" | tee $GITHUB_OUTPUT
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        if: github.repository == 'trickstercache/trickster' # skip for forks
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: resolve branch name
        if: inputs.tag == ''
        id: get-branch
        run: |
          b=$(git branch -r --contains ${{ github.ref }}) && branch=${b##*/}
          echo "branch=${branch}" | tee $GITHUB_OUTPUT
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          file: ${{ github.workspace }}/Dockerfile
          context: ${{ github.workspace }}
          platforms: ${{ matrix.arch}}
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.created=${{ steps.builddate.outputs.builddate }}
          build-args: |
            GIT_LATEST_COMMIT_ID=${{ github.sha }}
          tags: |
            ghcr.io/${{ github.repository }}:${{ inputs.tag || steps.get-branch.outputs.branch }}
            ${{ inputs.tag == '' && format('ghcr.io/{0}:{1}', github.repository, github.sha) || '' }}
            ${{ github.repository_owner == 'trickstercache' && format('{0}:{1}', github.repository, (inputs.tag || steps.get-branch.outputs.branch)) || '' }}
            ${{ (inputs.tag == '' && github.repository_owner == 'trickstercache') && format('{0}:{1}', github.repository, github.sha) || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
